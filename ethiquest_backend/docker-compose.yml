version: '3.8'

services:
  # Backend API
  backend:
    build: 
      context: ./ethiquest_backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://ethiquest:ethiquest@db:5432/ethiquest
      - REDIS_URL=redis://redis:6379/0
      - AI_PROVIDER=anthropic  # or openai
      - AI_API_KEY=${AI_API_KEY}
      - ENVIRONMENT=development
    volumes:
      - ./ethiquest_backend:/app
    depends_on:
      - db
      - redis
    networks:
      - ethiquest_network

  # Frontend Development Server
  frontend:
    build:
      context: ./ethiquest_app
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"  # Flutter web development server
    volumes:
      - ./ethiquest_app:/app
      - flutter_cache:/root/.pub-cache
    environment:
      - API_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - ethiquest_network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=ethiquest
      - POSTGRES_PASSWORD=ethiquest
      - POSTGRES_DB=ethiquest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ethiquest_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ethiquest_network

  # PgAdmin for Database Management (Development)
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@ethiquest.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - ethiquest_network

  # Monitoring Stack (Optional for Development)
  prometheus:
    image: prom/prometheus
    volumes:
      - ./deployment/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - ethiquest_network

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - ethiquest_network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
  flutter_cache:

networks:
  ethiquest_network:
    driver: bridge